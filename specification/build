#!/usr/bin/env python3
#
# Copyright 2018 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import os
import pathlib
import subprocess
import sys

wd = pathlib.Path(__file__).parent
sys.path.append(str(wd / "python"))

import fetchhash
import formattv

def writechanged(path, content):
    if (not path.exists()) or path.read_bytes() != content:
        path.write_bytes(content)

def main():
    work = wd / "work"
    work.mkdir(parents = True, exist_ok = True)
    fetch = work / "fetch"
    fetch.mkdir(parents = True, exist_ok = True)

    latexrun = work / "latexrun"
    if not latexrun.is_file():
        fl = fetch / "latexrun"
        fetchhash.fetch_file(fl,
            "https://raw.githubusercontent.com/aclements/latexrun/38ff6ec2815654513c91f64bdf2a5760c85da26e/latexrun",
            "2f144fc6257da7d47475165d2599ecb779d48ca25eb88c5bca4fbc9468a34782")
        fl.chmod(0o755)
        fl.rename(latexrun)

    tvs = work / "test_vectors.tex"
    if not tvs.is_file():
        ttvs = tvs.with_name("tmp_" + tvs.name)
        jf = wd.resolve().parent / "test_vectors" / "ours" / "HPolyC"
        jf /= "HPolyC_XChaCha12_32_AES256.json"
        formattv.write_tvs(jf, ttvs)
        ttvs.rename(tvs)

    rp = subprocess.run(["git", "rev-parse", "HEAD"], cwd=wd, check=True,
        stdout=subprocess.PIPE)
    gitstate = rp.stdout.strip()
    di = subprocess.run(["git", "diff-index", "--quiet", "HEAD", "--"], cwd=wd)
    if di.returncode != 0:
        gitstate += b"+"
    gitstate += b"\n"
    writechanged(work / "git.tex", gitstate)

    subprocess.run([str(latexrun),
            "-o", "hpolyc.pdf",
            "-O", str(work / "latex.out"),
            "--latex-cmd", "lualatex",
            "--bibtex-cmd", "biber",
            "hpolyc.tex"],
        cwd=wd, check=True)

if __name__ == "__main__":
    main()
